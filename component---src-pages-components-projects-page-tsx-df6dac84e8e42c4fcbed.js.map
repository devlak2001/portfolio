{"version":3,"file":"component---src-pages-components-projects-page-tsx-df6dac84e8e42c4fcbed.js","mappings":"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","sources":["webpack://portfolio/./src/pages/components/ProjectsPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/projectsPage.scss\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport json from \"./projects.json\";\r\n\r\nconst pagination = (\r\n  current: number,\r\n  numberOfPages: number,\r\n  setCurrentProject: any,\r\n  setCurrentProjectAsset: any\r\n) => {\r\n  const numbers = [];\r\n  const startingIndex =\r\n    numberOfPages - current < 4 ? numberOfPages - 4 : current;\r\n  for (let i = startingIndex; i < current + 5 && i <= numberOfPages; i++) {\r\n    numbers.push(\r\n      <div\r\n        className={`${current === i ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentProject(i);\r\n          setCurrentProjectAsset(0);\r\n        }}\r\n      >\r\n        <img\r\n          data-img-src={\"./images/ProjectsPage/numberBkg.png\"}\r\n          alt=\"Number Background\"\r\n        />\r\n        <span>{i + 1}</span>\r\n      </div>\r\n    );\r\n  }\r\n  return numbers;\r\n};\r\n\r\nexport default function ProjectsPage() {\r\n  const [currentProject, setCurrentProject] = useState<number>(0);\r\n  const [currentProjectAsset, setCurrentProjectAsset] = useState<number>(0);\r\n  // const [jsonData, setJsonData] = useState(json);\r\n  const projects = useMemo(() => {\r\n    return json.projects;\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(currentProjectAsset);\r\n  //   const currentSlide = document.querySelector(\r\n  //     \".ProjectsPage .contentWrapper .slide\"\r\n  //   ) as HTMLElement;\r\n  //   const currentVideo = currentSlide.childNodes[0] as HTMLVideoElement;\r\n  //   const currentVideoOverlay = currentSlide.childNodes[1] as HTMLElement;\r\n\r\n  //   currentVideoOverlay.style.opacity = \"1\";\r\n  //   currentVideoOverlay.style.opacity = \"all\";\r\n  //   if (currentVideo.readyState >= 2) {\r\n  //     currentVideoOverlay.style.opacity = \"0\";\r\n  //     currentVideoOverlay.style.opacity = \"none\";\r\n  //   } else {\r\n  //     currentVideo.addEventListener(\"loadedmetadata\", () => {\r\n  //       currentVideoOverlay.style.opacity = \"0\";\r\n  //       currentVideoOverlay.style.opacity = \"none\";\r\n  //     });\r\n  //   }\r\n  // }, [currentProjectAsset]);\r\n\r\n  // useEffect(() => {\r\n  //   const currentSlide = document.querySelector(\r\n  //     \".ProjectsPage .contentWrapper .slide\"\r\n  //   ) as HTMLElement;\r\n\r\n  //   const currentVideo = currentSlide.childNodes[0] as HTMLVideoElement;\r\n  //   const currentVideoOverlay = currentSlide.childNodes[1] as HTMLElement;\r\n\r\n  //   currentVideo.style.visibility = \"hidden\";\r\n  //   currentVideoOverlay.style.opacity = \"1\";\r\n  //   currentVideoOverlay.style.pointerEvents = \"all\";\r\n  //   if (currentVideo.readyState >= 2) {\r\n  //     currentVideo.style.visibility = \"visible\";\r\n  //     currentVideoOverlay.style.opacity = \"0\";\r\n  //     currentVideoOverlay.style.pointerEvents = \"none\";\r\n  //   } else {\r\n  //     currentVideo.addEventListener(\"loadedmetadata\", () => {\r\n  //       currentVideo.style.visibility = \"visible\";\r\n  //       currentVideoOverlay.style.opacity = \"0\";\r\n  //       currentVideoOverlay.style.pointerEvents = \"none\";\r\n  //     });\r\n  //   }\r\n  // }, [currentProject]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"DOMContentLoaded\", () => {\r\n      const currentSlide = document.querySelector(\r\n        \".ProjectsPage .contentWrapper .slide\"\r\n      ) as any;\r\n\r\n      console.log(\"sss\");\r\n      (currentSlide.childNodes[0] as HTMLVideoElement).style.visibility =\r\n        \"hidden\";\r\n      if ((currentSlide.childNodes[0] as HTMLVideoElement).readyState >= 2) {\r\n        (currentSlide.childNodes[0] as HTMLVideoElement).style.visibility =\r\n          \"visible\";\r\n      } else {\r\n        (currentSlide.childNodes[0] as HTMLVideoElement).addEventListener(\r\n          \"loadedmetadata\",\r\n          () => {\r\n            (currentSlide.childNodes[0] as HTMLVideoElement).style.visibility =\r\n              \"visible\";\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"ProjectsPage\">\r\n        <img\r\n          data-img-src={\"./images/ProjectsPage/backgroundPiece1.png\"}\r\n          alt=\"Background Piece\"\r\n          className=\"backgroundPiece1\"\r\n          loading=\"lazy\"\r\n        />\r\n        <img\r\n          data-img-src={\"./images/ProjectsPage/backgroundPiece2.png\"}\r\n          alt=\"Background Piece\"\r\n          className=\"backgroundPiece2\"\r\n          loading=\"lazy\"\r\n        />\r\n        <div className=\"projectsWrapper\">\r\n          {projects.map((el, projectIndex) => (\r\n            <div\r\n              key={projectIndex}\r\n              className=\"project\"\r\n              style={{\r\n                transform: `translateX(${\r\n                  (projectIndex - currentProject) * 100\r\n                }vw)`,\r\n                position:\r\n                  currentProject === projectIndex ? \"relative\" : \"absolute\",\r\n              }}\r\n            >\r\n              <div className=\"leftSide\">\r\n                <img\r\n                  data-img-src={\"./images/ProjectsPage/whiteBrush.png\"}\r\n                  alt=\"White Brush stroke\"\r\n                  className=\"brush\"\r\n                  loading=\"lazy\"\r\n                />\r\n                <h3>{el.title}</h3>\r\n                <p dangerouslySetInnerHTML={{ __html: el.description }}></p>\r\n                <div className=\"badges\">\r\n                  {el.associates && (\r\n                    <>\r\n                      <a href={el.associates[0].url}>\r\n                        <img\r\n                          data-img-src={\"./images\" + el.associates[0].img}\r\n                          className=\"badge\"\r\n                          alt=\"Badge\"\r\n                          title={el.associates[0].url}\r\n                        />\r\n                      </a>\r\n                    </>\r\n                  )}\r\n                  <img\r\n                    data-img-src={\r\n                      el.type === \"dependent\"\r\n                        ? \"./images/associates/teamBadge.png\"\r\n                        : \"./images/associates/independentBadge.png\"\r\n                    }\r\n                    className=\"badge\"\r\n                    alt=\"Badge\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={`presentation`}>\r\n                <div className=\"contentWrapper\">\r\n                  <div className={`slide active`}>\r\n                    {el.videos.map((el, index) => (\r\n                      <video\r\n                        key={index}\r\n                        muted={true}\r\n                        controls={true}\r\n                        style={{\r\n                          opacity: index === currentProjectAsset ? \"1\" : \"0\",\r\n                          transform:\r\n                            index === currentProjectAsset\r\n                              ? \"scale(100%)\"\r\n                              : \"scale(0)\",\r\n                          pointerEvents:\r\n                            index === currentProjectAsset ? \"all\" : \"none\",\r\n                          zIndex: index === currentProjectAsset ? \"1\" : \"-1\",\r\n                          transition:\r\n                            index === currentProjectAsset\r\n                              ? \"transform 0.5s ease\"\r\n                              : \"transform 0.5s ease, opacity 0.35s ease\",\r\n                        }}\r\n                        playsInline={true}\r\n                        data-img-src={\r\n                          index === currentProjectAsset &&\r\n                          projectIndex == currentProject\r\n                            ? \"./videos/\" + el.url\r\n                            : \"\"\r\n                        }\r\n                        src={\r\n                          index === currentProjectAsset &&\r\n                          projectIndex == currentProject\r\n                            ? \"./videos/\" + el.url\r\n                            : \"\"\r\n                        }\r\n                        poster={\r\n                          index === currentProjectAsset &&\r\n                          projectIndex == currentProject\r\n                            ? \"./videos/\" + el.poster\r\n                            : \"\"\r\n                        }\r\n                      ></video>\r\n                    ))}\r\n                    {/* <div className=\"loadingOverlay\" style={{ opacity: \"0\" }}>\r\n                      <span className=\"loader\"></span>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"prev\"\r\n                  onClick={() => {\r\n                    if (currentProjectAsset === 0) {\r\n                      setCurrentProjectAsset(el.videos.length - 1);\r\n                    } else {\r\n                      setCurrentProjectAsset(currentProjectAsset - 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <img\r\n                    data-img-src={\"./images/ProjectsPage/arrowLeft.png\"}\r\n                    alt=\"Left arrow\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </button>\r\n                <button\r\n                  className=\"next\"\r\n                  onClick={() => {\r\n                    if (currentProjectAsset === el.videos.length - 1) {\r\n                      setCurrentProjectAsset(0);\r\n                    } else {\r\n                      setCurrentProjectAsset(currentProjectAsset + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <img\r\n                    data-img-src={\"./images/ProjectsPage/arrowRight.png\"}\r\n                    alt=\"Right arrow\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </button>\r\n                <div className=\"number\">\r\n                  <img\r\n                    data-img-src={\"./images/ProjectsPage/buttonBkg.png\"}\r\n                    alt=\"Button background\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                  <span>{currentProjectAsset + 1}</span>/\r\n                  <span>{el.videos.length}</span>\r\n                </div>\r\n                <img\r\n                  data-img-src={\"./images/ProjectsPage/projectGallery.png\"}\r\n                  alt=\"Project Gallery Text\"\r\n                  className=\"title\"\r\n                  loading=\"lazy\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n          <button\r\n            className={`left`}\r\n            onClick={() => {\r\n              setCurrentProjectAsset(0);\r\n              if (currentProject > 0) {\r\n                setCurrentProject(currentProject - 1);\r\n              } else {\r\n                setCurrentProject(json.projects.length - 1);\r\n              }\r\n            }}\r\n          >\r\n            <img\r\n              data-img-src={\"./images/ProjectsPage/arrowLeft2.png\"}\r\n              alt=\"Left arrow\"\r\n              loading=\"lazy\"\r\n            />\r\n          </button>\r\n          <div className=\"numbers\">\r\n            {pagination(\r\n              currentProject,\r\n              json.projects.length - 1,\r\n              setCurrentProject,\r\n              setCurrentProjectAsset\r\n            )}\r\n          </div>\r\n          <button\r\n            className={`right`}\r\n            onClick={() => {\r\n              setCurrentProjectAsset(0);\r\n              if (currentProject < json.projects.length - 1) {\r\n                setCurrentProject(currentProject + 1);\r\n              } else {\r\n                setCurrentProject(0);\r\n              }\r\n            }}\r\n          >\r\n            <img\r\n              data-img-src={\"./images/ProjectsPage/arrowRight2.png\"}\r\n              alt=\"Right arrow\"\r\n              loading=\"lazy\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"names":["pagination","current","numberOfPages","setCurrentProject","setCurrentProjectAsset","numbers","i","push","React","className","onClick","alt","ProjectsPage","currentProject","useState","currentProjectAsset","projects","useMemo","json","useEffect","window","addEventListener","currentSlide","document","querySelector","console","log","childNodes","style","visibility","readyState","loading","map","el","projectIndex","key","transform","position","title","dangerouslySetInnerHTML","__html","description","associates","href","url","img","type","videos","index","muted","controls","opacity","pointerEvents","zIndex","transition","playsInline","src","poster","length"],"sourceRoot":""}